<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>hsfs: /hsfs/fuse/xcommon.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.gif"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">hsfs
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">About:HSFSisaFUSEfilesystemformountingaremoteserverusingnfs3protocol.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('xcommon_8c_source.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">xcommon.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="xcommon_8c.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * xcommon.c - various functions put together to avoid basic error checking.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * added fcntl locking by Kjetil T. (kjetilho@math.uio.no) - aeb, 950927</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * 1999-02-22 Arkadiusz Mi¶kiewicz &lt;misiek@pld.ORG.PL&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * - added Native Language Support</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * 2006-06-06 Amit Gud &lt;agud@redhat.com&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * - Moved code snippets here from mount/sundries.c of util-linux</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *   and merged code from support/nfs/xmalloc.c by Olaf Kirch &lt;okir@monad.swb.de&gt; here.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;ctype.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="xcommon_8h.html">xcommon.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="nls_8h.html">nls.h</a>&quot;</span>        <span class="comment">/* _() */</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a115ce574fe5cca364afa17c11067cb66">   23</a></span>&#160;void (*<a class="code" href="xcommon_8c.html#a115ce574fe5cca364afa17c11067cb66">at_die</a>)(void ) = NULL;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keywordtype">char</span> *</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="code" href="xcommon_8h.html#ae2eb416cff19e5aaa7be256d27fb6d77">   26</a></span>&#160;<a class="code" href="xcommon_8c.html#ae2eb416cff19e5aaa7be256d27fb6d77">xstrndup</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *s, <span class="keywordtype">int</span> n) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;     <span class="keywordtype">char</span> *t;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;     <span class="keywordflow">if</span> (s == NULL)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;          <a class="code" href="xcommon_8c.html#a9c7dab7e21aad8e4f343ba73120e245b">die</a> (<a class="code" href="xcommon_8h.html#a587ae77ee5b3c931c10cb51c19053f11">EX_SOFTWARE</a>, <a class="code" href="nls_8h.html#a8a97de23397d8af6821824c0234d8c3c">_</a>(<span class="stringliteral">&quot;bug in xstrndup call&quot;</span>));</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;     t = <a class="code" href="xcommon_8c.html#a42ccfa6fc49cc4ce90cc44cd05052490">xmalloc</a>(n+1);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;     strncpy(t,s,n);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;     t[n] = 0;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;     <span class="keywordflow">return</span> t;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">char</span> *</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a53083cd0bc51c06c5711c5fa843cc281">   40</a></span>&#160;<a class="code" href="xcommon_8c.html#a1c2faee531a084da9dbd9e2155f86ec2">xstrconcat2</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *t) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;     <span class="keywordtype">char</span> *res;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;     <span class="keywordflow">if</span> (!s) s = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;     <span class="keywordflow">if</span> (!t) t = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;     res = <a class="code" href="xcommon_8c.html#a42ccfa6fc49cc4ce90cc44cd05052490">xmalloc</a>(strlen(s) + strlen(t) + 1);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;     strcpy(res, s);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;     strcat(res, t);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;     <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/* frees its first arg - typical use: s = xstrconcat3(s,t,u); */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keywordtype">char</span> *</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a5b8b86642aee5a9cddd725645e1094eb">   53</a></span>&#160;<a class="code" href="xcommon_8c.html#aa8b66e9e97b7310f81ddc2bcd66acc33">xstrconcat3</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *t, <span class="keyword">const</span> <span class="keywordtype">char</span> *u) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;     <span class="keywordtype">char</span> *res;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;     <span class="keywordflow">if</span> (!s) s = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;     <span class="keywordflow">if</span> (!t) t = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;     <span class="keywordflow">if</span> (!u) u = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;     res = <a class="code" href="xcommon_8c.html#a42ccfa6fc49cc4ce90cc44cd05052490">xmalloc</a>(strlen(s) + strlen(t) + strlen(u) + 1);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;     strcpy(res, s);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;     strcat(res, t);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     strcat(res, u);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;     free((<span class="keywordtype">void</span> *) s);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/* frees its first arg - typical use: s = xstrconcat4(s,t,u,v); */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keywordtype">char</span> *</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a7e5f630c8cf760a007d61d84b423177d">   69</a></span>&#160;<a class="code" href="xcommon_8c.html#abb149ed1a6b979cde7bf4b288a9c1633">xstrconcat4</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *s, <span class="keyword">const</span> <span class="keywordtype">char</span> *t, <span class="keyword">const</span> <span class="keywordtype">char</span> *u, <span class="keyword">const</span> <span class="keywordtype">char</span> *v) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;     <span class="keywordtype">char</span> *res;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;     <span class="keywordflow">if</span> (!s) s = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;     <span class="keywordflow">if</span> (!t) t = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;     <span class="keywordflow">if</span> (!u) u = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;     <span class="keywordflow">if</span> (!v) v = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;     res = <a class="code" href="xcommon_8c.html#a42ccfa6fc49cc4ce90cc44cd05052490">xmalloc</a>(strlen(s) + strlen(t) + strlen(u) + strlen(v) + 1);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;     strcpy(res, s);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;     strcat(res, t);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;     strcat(res, u);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;     strcat(res, v);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;     free((<span class="keywordtype">void</span> *) s);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;     <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">/* Non-fatal error.  Print message and return.  */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">/* (print the message in a single printf, in an attempt</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    to avoid mixing output of several threads) */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="code" href="xcommon_8h.html#ad3b60fb16a728e8734d256cadbe2f308">   89</a></span>&#160;<a class="code" href="xcommon_8c.html#ad3b60fb16a728e8734d256cadbe2f308">nfs_error</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *fmt, ...) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;     va_list args;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;     <span class="keywordtype">char</span> *fmt2;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     fmt2 = <a class="code" href="xcommon_8c.html#a1c2faee531a084da9dbd9e2155f86ec2">xstrconcat2</a> (fmt, <span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;     va_start (args, fmt);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;     vfprintf (stderr, fmt2, args);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;     va_end (args);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;     free (fmt2);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/* Make a canonical pathname from PATH.  Returns a freshly malloced string.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">   It is up the *caller* to ensure that the PATH is sensible.  i.e.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">   canonicalize (&quot;/dev/fd0/.&quot;) returns &quot;/dev/fd0&quot; even though ``/dev/fd0/.&#39;&#39;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">   is not a legal pathname for ``/dev/fd0&#39;&#39;.  Anything we cannot parse</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">   we return unmodified.   */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a3af2cd82f0514540487bcdb54b9a355d">  105</a></span>&#160;<span class="keywordtype">char</span> *<a class="code" href="xcommon_8c.html#a3af2cd82f0514540487bcdb54b9a355d">canonicalize</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *path) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordtype">char</span> canonical[PATH_MAX+2];</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">if</span> (path == NULL)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#if 1</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="xcommon_8h.html#a43f151df79cd084a0fc2066e90fc1249">streq</a>(path, <span class="stringliteral">&quot;none&quot;</span>) ||</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="xcommon_8h.html#a43f151df79cd084a0fc2066e90fc1249">streq</a>(path, <span class="stringliteral">&quot;proc&quot;</span>) ||</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <a class="code" href="xcommon_8h.html#a43f151df79cd084a0fc2066e90fc1249">streq</a>(path, <span class="stringliteral">&quot;devpts&quot;</span>))</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="xcommon_8c.html#a31c8e4cd784d16e28687ee2f10b80028">xstrdup</a>(path);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span>        <span class="keywordflow">if</span> (realpath (path, canonical))</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="xcommon_8c.html#a31c8e4cd784d16e28687ee2f10b80028">xstrdup</a>(canonical);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="xcommon_8c.html#a31c8e4cd784d16e28687ee2f10b80028">xstrdup</a>(path);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">/* Fatal error.  Print message and exit.  */</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a0818e62af58745e448f1a0cdae328e1e">  125</a></span>&#160;<a class="code" href="xcommon_8c.html#a9c7dab7e21aad8e4f343ba73120e245b">die</a>(<span class="keywordtype">int</span> err, <span class="keyword">const</span> <span class="keywordtype">char</span> *fmt, ...) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        va_list args;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        va_start(args, fmt);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        vfprintf(stderr, fmt, args);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        fprintf(stderr, <span class="stringliteral">&quot;\n&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        va_end(args);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="xcommon_8c.html#a115ce574fe5cca364afa17c11067cb66">at_die</a>)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                (*at_die)();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        exit(err);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;die_if_null(<span class="keywordtype">void</span> *t) {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">if</span> (t == NULL)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <a class="code" href="xcommon_8c.html#a9c7dab7e21aad8e4f343ba73120e245b">die</a>(<a class="code" href="xcommon_8h.html#a87e45523b972510f1ad5a5ac03f6c6c1">EX_SYSERR</a>, <a class="code" href="nls_8h.html#a8a97de23397d8af6821824c0234d8c3c">_</a>(<span class="stringliteral">&quot;not enough memory&quot;</span>));</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">void</span> *</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a42ccfa6fc49cc4ce90cc44cd05052490">  146</a></span>&#160;<a class="code" href="xcommon_8c.html#a42ccfa6fc49cc4ce90cc44cd05052490">xmalloc</a> (<span class="keywordtype">size_t</span> size) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordtype">void</span> *t;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">if</span> (size == 0)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        t = malloc(size);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        die_if_null(t);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> t;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">void</span> *</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a9f6bc6d637434a7cca469629ed0594ed">  159</a></span>&#160;<a class="code" href="xcommon_8c.html#a9f6bc6d637434a7cca469629ed0594ed">xrealloc</a> (<span class="keywordtype">void</span> *p, <span class="keywordtype">size_t</span> size) {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordtype">void</span> *t;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        t = realloc(p, size);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        die_if_null(t);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> t;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="xcommon_8h.html#afca9b96f6a61eebbcdd7e6b3fc31ed97">  169</a></span>&#160;<a class="code" href="xcommon_8c.html#a976e14808b9247ec952c262553f09f8f">xfree</a>(<span class="keywordtype">void</span> *ptr)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        free(ptr);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keywordtype">char</span> *</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="xcommon_8h.html#a31c8e4cd784d16e28687ee2f10b80028">  175</a></span>&#160;<a class="code" href="xcommon_8c.html#a31c8e4cd784d16e28687ee2f10b80028">xstrdup</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *s) {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordtype">char</span> *t;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span> (s == NULL)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        t = strdup(s);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        die_if_null(t);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">return</span> t;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7d3b2452f79df3a86b1df76a03fa187c.html">hsfs</a></li><li class="navelem"><a class="el" href="dir_80c485d3cfa14bf7047c0020b99c42b1.html">fuse</a></li><li class="navelem"><a class="el" href="xcommon_8c.html">xcommon.c</a></li>
    <li class="footer">Generated on Wed Sep 19 2012 08:24:36 for hsfs by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.2 </li>
  </ul>
</div>
</body>
</html>
